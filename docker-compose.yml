version: '3.3'

services:
  db:
    build: ./postgres
    image: postgres:stats
    restart: always
    networks:
      - statsnet
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: db
      POSTGRES_PASSWORD: password
      DB_USER_WRITE: writer
      DB_PASS_WRITE: writer
      DB_USER_READ: reader
      DB_PASS_READ: reader
    labels:
      - traefik.enable=false

  writer:
    build: ./python
    image: python:stats
    restart: always
    networks:
      - statsnet
      - proxy
    depends_on:
      - db
    expose:
      - 5000
    volumes:
      - ./mservices/writer.py:/usr/src/app/app.py
    labels:
      - traefik.backend=writer
      - traefik.backend.healtcheck.path="/health"
      - traefik.backend.healtcheck.interval=1s
      - traefik.docker.network=${COMPOSE_PROJECT_NAME}_proxy
      - traefik.frontend.rule=Path:/log
      - traefik.port=5000

  reader:
    build: ./python
    image: python:stats
    restart: always
    networks:
      - statsnet
      - proxy
    depends_on:
      - db
    expose:
      - 5000
    volumes:
      - ./mservices/reader.py:/usr/src/app/app.py
    labels:
      - traefik.backend=reader
      - traefik.docker.network=${COMPOSE_PROJECT_NAME}_proxy
      - traefik.frontend.rule=Path:/stats
      - traefik.port=5000

  traefik:
    image: traefik:alpine
    restart: always
    networks:
      - proxy
    depends_on:
        - writer
        - reader
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./mservices/traefik.toml:/traefik.toml
    ports:
      - 80:80
      - 81:8080
    labels:
      - traefik.port=8080
      - traefik.docker.network=${COMPOSE_PROJECT_NAME}_proxy
      - traefik.frontend.rule=Host:docker.localhost

  adminer:
    image: adminer
    restart: always
    networks:
      - statsnet
    ports:
      - 8080:8080
    labels:
      - traefik.enable=false

networks:
  statsnet:
  proxy:

volumes:
  db-data:  
